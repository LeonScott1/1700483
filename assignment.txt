   	int gcd(int x, int y) {
		   int temp;
		   if (y=0) 
			   return x;
			   if (x>=y && x!=0) 
				return gcd(y, x%y);   
		   } //recurrence 
		   
		   
	   }int gcd(int x, int y) {
	   int temp;
	   while (y!=0) {
		   if (x>=y && x!=0) {
			   temp=x;
			   x=y;
			   y=x%y;
		   }
	   }
	   return x;
   } //iteration 
	
	
	
	int Ack(int x, int y) {
	if (x=0)
		return y+1;
	if (y=0)
		return Ack(x-1, 1);
}



int Ack(int x, int y) {
	while (x!=0){
		
	if (y=0)
		return Ack(x-1, 1);
}
return y+1;
}

int Fib(int x){
if (x=0)
return 0;
if x=1)
return 1;
if(x>1)
return Fib(x-1) + Fib(x-2)
}
int Fib(int x){
while (x!=0)
{
if x=1)
return 1;
if(x>1)
return Fib(x-1) + Fib(x-2)
}
return 0;
}

int hanoi(int n){
if(n=1)
return 1;
if (n>1)
return 2*Hanoi(n-1)+1
}

int hanoi(int n){
while(n!=1)
{
if (n>1)
return 2*Hanoi(n-1)+1
}
return 1;
}
